x <- c(1,2,3,NA,4,5,6)
rm(cube, make.power, square, test)
criteria <- x>3
criteria
which(criteria)
?which
x[criteria]
x[which(criteria)]
?w
?c
c(1,2,3,4,5)
12345
x[[]][[]][[]][[]][[]][[]][[[]]][[[[[]]]]]
install.packages("RMySQL")
library(RMySQL)
?dbConnect
remove.packages(RMySQL)
remove.packages("RMySQL")
?dbConnect
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
result
rm(ucscDb)
r.version.string
?r.version
??r.version
r.string.version
?r.string
detach(RMySQL)
detach("package:RMySQL", unload=TRUE)
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate()
?separate
separate(data=res, col=sex_class, into=c("sex","class"))
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
students4
submit()
passed
failed
mutate(passed, status, "passed")
?mutate
mutate(passed, status="passed")
passed <- mutate(passed, status="passed")
failed <- mutate(failed, status="failed")
bind_rows <- (passed, failed)
bind_rows(passed, failed)
sat
submit()
install.packages("httr")
install.packages("httpuv")
library(httr)
library(httpuv)
myapp <- oauth_app("github", "1e284e4e35d198bbc097", "86128a0a57f6185a6af8003f6d3b544cf114deee")
install.packages("Rcpp")
remove.packages("Rcpp")
install.packages("Rcpp")
library(httr)
library(httpuv)
myapp <- oauth_app("github", "1e284e4e35d198bbc097", "86128a0a57f6185a6af8003f6d3b544cf114deee")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
rm(failed, gradebook)
rm(passed, res, result, sat, student_info)
rm(students, students2, students3, students4, criteria, x)
gtoken <- config(token=github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
install.packages(c("codetools", "manipulate"))
?required
?require
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
head(htmlCode)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
getwd()
dir()
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileURL, destfile="q5.for")
??fixed
q6 <- read.fwf("q5.for", 4, skip = 3)
head(q6)
q6 <- read.fwf("q5.for", c(9,4,4,4,4,4,4,4,4), skip = 3)
head(q6)
q6 <- read.fwf("q5.for", c(9,4,4,4,4,4,4,4,4), skip = 3, header=TRUE)
q6 <- read.fwf("q5.for", c(14,4,4,5,4,4,5,4,4,5,4,4), skip = 3)
head(q6)
str(q6)
q6 <- read.fwf("q5.for", c(14,4,4,5,4,4,5,4,4,5,4,4), skip = 3, stringsAsFactors=FALSE)
str(q6)
head(q6)
q6[2,2]
q6 <- read.fwf("q5.for", c(15,4,4,5,4,4,5,4,4,5,4,4), skip = 3, stringsAsFactors=FALSE)
head(q6)
q6 <- read.fwf("q5.for", c(10,-5,4,4,5,4,4,5,4,4,5,4,4), skip = 3, stringsAsFactors=FALSE)
head(q6)
q6 <- read.fwf("q5.for", c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3, stringsAsFactors=FALSE)
head(q6)
q6 <- read.fwf("q5.for", c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3, stringsAsFactors=FALSE, headers=T)
q6 <- read.fwf("q5.for", c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 3, stringsAsFactors=FALSE, header=T)
q6[1,1]
q6 <- read.fwf("q5.for", c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip = 4, stringsAsFactors=FALSE)
head(q6)
sum(q6$V4)
sum(q6$v4, q6$v9)
sum(q6$V4, q6$V9)
sum(as.numeric(q6$V4), as.numeric(q6$V9)
)
q6$V4 <- as.numeric(q6$V4)
q6$V9 <- as.numeric(q6$V9)
sum(q6$V4)
sum(q6$V9)
tail(q6)
?detach
detach(RCurl)
detach(package:Rcurl)
detach(package:RCurl)
detach(package:bitops)
?require
install.packages(c("codetools", "manipulate", "mgcv"))
install.packages("httr")
install.package("httpuv")
install.packages("httpuv")
rm(list=ls())
library()
install.packages("manipulate")
setwd("C:/Users/ryan.summe/OneDrive/Coursera/Data Science/Getting and Cleaning Data/Project/UCI HAR Dataset")
?read.table
ytest <- read.table("test/y_test.txt")
class(ytest)
dim(ytest)
names(ytest)
head(ytest)
tail(ytest)
str(ytest)
summarize(ytest)
?summary
summary(ytest)
table(ytest)
features <- read.table("features.txt")
str(features)
summary(features)
subjecttest <- read.table("test/subject_test.txt")
activitylabels <- read.table("activity_labels")
activitylabels <- read.table("activity_labels.txt")
activitylabels
xtest <- read.table("test/X_test.txt")
View(xtest)
View(features)
features[c(303,317),]
?duplicate
?duplicated
anyDuplicated(features$V2)
names(xtest) <- features[,2]
rm(features)
range(subjecttest)
table(subjecttest)
?match
match(ytest,activitylabels[,2])
ytest[1:5]
ytest[1:5,]
res <- merge(activitylabels, ytest, by=activitylabels$V1)
res <- merge(activitylabels, ytest, by="V1")
head(res)
res <- merge(ytest,activitylabels,by="V2")
res <- merge(ytest,activitylabels,by="V1")
head(res)
activitylabels
head(ytest)
test <- merge(ytest,activitylabels,by.x="V1",by.y="V1")
head(test)
test <- merge(ytest,activitylabels,by.x="V1",by.y="V1",all=TRUE)
head(test)
rm(test, res)
res <- merge(ytest,activitylabels,by="V1")
table(res)
table(ytest)
View(activitylabels)
?cbind
test <- cbind(subjecttest,ytest,xtest)
names(test)[1:5]
names(ytest) <- "Activity.Factor"
?read.table
ytest <- read.table("test/y_test.txt",col.names="Activity.Factor")
head(ytest)
source('C:/Users/ryan.summe/OneDrive/Coursera/Data Science/Getting and Cleaning Data/Project/UCI HAR Dataset/test.R')
rm(list=ls())
source('C:/Users/ryan.summe/OneDrive/Coursera/Data Science/Getting and Cleaning Data/Project/UCI HAR Dataset/run_analysis.R')
head(testData[,1:4])
test <- merge(testData,activity_labels,by.x="Activity.Factor",by.y="Factor")
head(testData[,1:4])
head(testData[,562:564])
head(test[,562:564])
test <- test[,c(1,-2,564,3:563)]
test <- test[,c(1,2,564,3:563)]
head(test[,1:5])
test <- merge(testData,activity_labels,by.x="Activity.Factor",by.y="Factor")
head(test[,1:5])
head(test[,561:])
head(test[,561:564])
test <- test[,c(2,564,3:563)]
head(test[,1:5])
gyro <- read.table("test/Inertial Signals/body_gyro_x_test.txt")
names(gyro)[1:5]
getwd()
path <- "test"
path + "ok"
path & "ok"
c(path,"ok")
?paste
paste(path,"/")
paste(path,"/", sep="")
y <- read.table(paste(path,"/","y_",path,".txt",sep=""))
